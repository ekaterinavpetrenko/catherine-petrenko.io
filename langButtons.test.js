/**
 * @jest-environment jsdom
 */
jest.useFakeTimers();
require('@testing-library/jest-dom');

describe('–∫–Ω–æ–ø–∫–∏ —è–∑—ã–∫–æ–≤ ‚Äî –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∫–ª–∏–∫', () => {
  beforeEach(() => {
    // üß©  –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º DOM, –∫–∞–∫ –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    document.body.innerHTML = `
      <header class="top-bar">
        <div class="controls">
          <div class="language-selector">
            <button class="lang-btn active" data-lang="en">EN</button>
            <button class="lang-btn" data-lang="es">ES</button>
            <button class="lang-btn" data-lang="ru">RU</button>
          </div>
          <button id="theme-toggle">‚òÄÔ∏è / üåô</button>
        </div>
      </header>
      <main id="content" class="fade"></main>
    `;

    // üí° –ú–æ–∫–∞–µ–º fetch ‚Äî –∏–º–∏—Ç–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç JSON (–≤–∞–∂–Ω–æ: ok: true)
    global.fetch = jest.fn(() =>
      Promise.resolve({
        ok: true,
        json: () =>
          Promise.resolve({
            name: "Catherine Petrenko",
            subtitle: "System-thinking PM",
            skillsTitle: "Skills",
            skills: ["Leadership", "System Thinking"],
            aboutTitle: "About",
            aboutText: ["Paragraph 1", "Paragraph 2"]
          })
      })
    );

    // üß† –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç (–æ–Ω —Å–∞–º –Ω–∞–≤–µ—Å–∏—Ç —Å–ª—É—à–∞—Ç–µ–ª—å DOMContentLoaded)
    jest.isolateModules(() => {
      require('../script.js');
    });
  });

  afterEach(() => {
    jest.clearAllMocks();
    jest.restoreAllMocks();
  });

  // üîß –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è: —Ñ–ª—à–∏–º microtasks (–ø—Ä–æ–º–∏—Å—ã)
  const flush = () => Promise.resolve();

  // --- –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏ —è–∑—ã–∫–∞ ---
  test('–ø–æ—Å–ª–µ —Å–º–µ–Ω—ã —è–∑—ã–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–π —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∞—è –∫–Ω–æ–ø–∫–∞, –ø—Ä–µ–∂–Ω—è—è —Å–Ω–∏–º–∞–µ—Ç—Å—è', async () => {
    // 1Ô∏è‚É£ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    document.dispatchEvent(new Event("DOMContentLoaded"));

    // 2Ô∏è‚É£ –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ ES
    const enButton = document.querySelector('.lang-btn[data-lang="en"]');
    const esButton = document.querySelector('.lang-btn[data-lang="es"]');
    esButton.click();

    // 3Ô∏è‚É£ –ñ–¥—ë–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–º–∏—Å–æ–≤ (fetch/json)
    await flush();
    await flush();

    // 4Ô∏è‚É£ –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–π –≤—Å—Ç–∞–≤–∫–∏ (200 –º—Å –≤ loadLang)
    jest.advanceTimersByTime(200);

    // 5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª–∞—Å—Å—ã
    expect(esButton.classList.contains('active')).toBe(true);
    expect(enButton.classList.contains('active')).toBe(false);
  });

  // --- –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∫–ª–∏–∫ –ø–æ –∞–∫—Ç–∏–≤–Ω–æ–º—É —è–∑—ã–∫—É –Ω–µ –∏–Ω–∏—Ü–∏–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–π fetch ---
  test('–ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∫–ª–∏–∫ –ø–æ —É–∂–µ –∞–∫—Ç–∏–≤–Ω–æ–º—É —è–∑—ã–∫—É –Ω–µ –∏–Ω–∏—Ü–∏–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–π fetch –∏ –Ω–µ –º–µ–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ', async () => {
    // 1Ô∏è‚É£ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    document.dispatchEvent(new Event("DOMContentLoaded"));
    await flush(); // –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ EN
    jest.advanceTimersByTime(200);

    // 2Ô∏è‚É£ –°–Ω–∏–º–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    const enButton = document.querySelector('.lang-btn[data-lang="en"]');
    const esButton = document.querySelector('.lang-btn[data-lang="es"]');
    const ruButton = document.querySelector('.lang-btn[data-lang="ru"]');
    const beforeCalls = global.fetch.mock.calls.length;
    const beforeActive = {
      en: enButton.classList.contains('active'),
      es: esButton.classList.contains('active'),
      ru: ruButton.classList.contains('active'),
    };

    // 3Ô∏è‚É£ –ö–ª–∏–∫–∞–µ–º –ø–æ —É–∂–µ –∞–∫—Ç–∏–≤–Ω–æ–π EN
    enButton.click();

    // 4Ô∏è‚É£ –ñ–¥—ë–º –∏ –¥–≤–∏–≥–∞–µ–º —Ç–∞–π–º–µ—Ä—ã (–Ω–∞ —Å–ª—É—á–∞–π –∞–Ω–∏–º–∞—Ü–∏–π)
    await flush();
    jest.advanceTimersByTime(200);

    // 5Ô∏è‚É£ –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –Ω–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–µ –ø—Ä–∏–±–∞–≤–∏–ª–æ—Å—å
    expect(global.fetch).toHaveBeenCalledTimes(beforeCalls);

    // 6Ô∏è‚É£ –ò —á—Ç–æ –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–ª–∞—Å—Å—ã –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å
    expect(enButton.classList.contains('active')).toBe(beforeActive.en);
    expect(esButton.classList.contains('active')).toBe(beforeActive.es);
    expect(ruButton.classList.contains('active')).toBe(beforeActive.ru);
  });
});


